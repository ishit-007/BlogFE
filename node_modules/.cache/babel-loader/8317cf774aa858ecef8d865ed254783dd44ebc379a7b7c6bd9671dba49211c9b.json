{"ast":null,"code":"var _jsxFileName = \"/Users/ishit_singh/Downloads/react-BlogTesting/src/components/Main.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Card from './Card';\nimport makeRequest from '../util/makeRequest';\nimport { GET_BLOG_DATA } from '../constants/apiEndpoints';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [error, setError] = React.useState(null);\n  const [blogsData, setBlogsData] = React.useState([]);\n  React.useEffect(() => {\n    makeRequest(GET_BLOG_DATA).then(data => {\n      setBlogsData(data);\n    }).catch(err => {\n      setError(err.message);\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  } else {\n    return blogsData ? /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: blogsData.map(blogData => /*#__PURE__*/_jsxDEV(Card, {\n          id: true,\n          title: blogData.title,\n          image: blogData.image,\n          reading_time: blogData.reading_time,\n          description: blogData.description,\n          claps: blogData.claps,\n          date: blogData.date,\n          liked: blogData.liked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }, this);\n  }\n};\n_s(Main, \"61vtkbxTCHQszSlpZ/eoy50yUaA=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","Card","makeRequest","GET_BLOG_DATA","jsxDEV","_jsxDEV","Main","_s","error","setError","useState","blogsData","setBlogsData","useEffect","then","data","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","blogData","id","title","image","reading_time","description","claps","date","liked","_c","$RefreshReg$"],"sources":["/Users/ishit_singh/Downloads/react-BlogTesting/src/components/Main.jsx"],"sourcesContent":["import React from 'react';\nimport Card from './Card';\nimport makeRequest from '../util/makeRequest';\nimport { GET_BLOG_DATA } from '../constants/apiEndpoints';\n\nconst Main = () => {\n\n  const [error,setError]=React.useState(null);\n  const [blogsData,setBlogsData]=React.useState([]);\n\n  React.useEffect(()=>{\n\n    makeRequest(GET_BLOG_DATA)\n    .then((data)=>{\n      setBlogsData(data);\n    })\n    .catch((err)=>{\n      setError(err.message);\n    })\n  },[])\n\n  if(error){\n    return <div>{error}</div>\n  }\n  else{\n    return (\n      blogsData?\n      <main>\n        <div className=\"cards\">\n          {blogsData.map((blogData)=><Card id title={blogData.title} image={blogData.image} reading_time={blogData.reading_time} description={blogData.description} claps={blogData.claps} date={blogData.date} liked={blogData.liked}/>)}\n        </div>\n      </main>\n      :<div>Loading...</div>\n    );\n  }\n};\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,SAASC,aAAa,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACT,KAAK,CAACU,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAACZ,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;EAEjDV,KAAK,CAACa,SAAS,CAAC,MAAI;IAElBX,WAAW,CAACC,aAAa,CAAC,CACzBW,IAAI,CAAEC,IAAI,IAAG;MACZH,YAAY,CAACG,IAAI,CAAC;IACpB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAG;MACZR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAEL,IAAGV,KAAK,EAAC;IACP,oBAAOH,OAAA;MAAAc,QAAA,EAAMX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAC3B,CAAC,MACG;IACF,OACEZ,SAAS,gBACTN,OAAA;MAAAc,QAAA,eACEd,OAAA;QAAKmB,SAAS,EAAC,OAAO;QAAAL,QAAA,EACnBR,SAAS,CAACc,GAAG,CAAEC,QAAQ,iBAAGrB,OAAA,CAACJ,IAAI;UAAC0B,EAAE;UAACC,KAAK,EAAEF,QAAQ,CAACE,KAAM;UAACC,KAAK,EAAEH,QAAQ,CAACG,KAAM;UAACC,YAAY,EAAEJ,QAAQ,CAACI,YAAa;UAACC,WAAW,EAAEL,QAAQ,CAACK,WAAY;UAACC,KAAK,EAAEN,QAAQ,CAACM,KAAM;UAACC,IAAI,EAAEP,QAAQ,CAACO,IAAK;UAACC,KAAK,EAAER,QAAQ,CAACQ;QAAM;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAC3N;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD,gBACNlB,OAAA;MAAAc,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAE1B;AACF,CAAC;AAAChB,EAAA,CA9BID,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}