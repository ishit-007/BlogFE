{"ast":null,"code":"var _jsxFileName = \"/Users/ishit_singh/Downloads/react-BlogTesting/src/components/Main.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Card from './Card';\nimport makeRequest from '../util/makeRequest';\nimport { GET_BLOG_DATA } from '../constants/apiEndpoints';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const navigate = useNavigate();\n  const sortByTitleHandler = (a, b) => {\n    if (a.title > b.title) {\n      return 1;\n    } else if (a.title < b.title) {\n      return -1;\n    } else {\n      return a.id - b.id;\n    }\n  };\n  const [error, setError] = React.useState(null);\n  const [blogsData, setBlogsData] = React.useState();\n  React.useEffect(() => {\n    makeRequest(GET_BLOG_DATA, {}, navigate).then(data => {\n      const sortedData = data.sort(sortByTitleHandler);\n      setBlogsData(sortedData);\n    }).catch(err => {\n      setError(err.message);\n    });\n  }, []);\n  return blogsData ? /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: blogsData.map(blogData => /*#__PURE__*/_jsxDEV(Card, {\n        id: blogData.id,\n        title: blogData.title,\n        image: blogData.image,\n        reading_time: blogData.reading_time,\n        description: blogData.description,\n        claps: blogData.claps,\n        date: new Date(blogData.date).toLocaleDateString(),\n        liked: blogData.liked\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n_s(Main, \"NaiWN0zen8A3R3p8M7LxUnqvgdg=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","Card","makeRequest","GET_BLOG_DATA","useNavigate","jsxDEV","_jsxDEV","Main","_s","navigate","sortByTitleHandler","a","b","title","id","error","setError","useState","blogsData","setBlogsData","useEffect","then","data","sortedData","sort","catch","err","message","children","className","map","blogData","image","reading_time","description","claps","date","Date","toLocaleDateString","liked","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ishit_singh/Downloads/react-BlogTesting/src/components/Main.jsx"],"sourcesContent":["import React from 'react';\nimport Card from './Card';\nimport makeRequest from '../util/makeRequest';\nimport { GET_BLOG_DATA } from '../constants/apiEndpoints';\nimport { useNavigate } from 'react-router-dom';\n\nconst Main = () => {\n\n  const navigate=useNavigate();\n  const sortByTitleHandler=(a,b)=>{\n    if(a.title>b.title){\n      return 1;\n    }\n    else if(a.title<b.title){\n      return -1;\n    }\n    else{\n      return a.id-b.id;\n    }\n  };\n  const [error,setError]=React.useState(null);\n  const [blogsData,setBlogsData]=React.useState();\n\n  React.useEffect(()=>{\n\n    makeRequest(GET_BLOG_DATA,{},navigate)\n    .then((data)=>{\n      const sortedData=data.sort(sortByTitleHandler);\n      setBlogsData(sortedData);\n    })\n    .catch((err)=>{\n      setError(err.message);\n    })\n  },[])\n\n  \n  \n    return (\n      blogsData?\n      <main>\n        <div className=\"cards\">\n          \n          {blogsData.map((blogData)=><Card key={Math.random()}id={blogData.id} title={blogData.title} image={blogData.image} reading_time={blogData.reading_time} description={blogData.description} claps={blogData.claps} date={(new Date(blogData.date)).toLocaleDateString()} liked={blogData.liked} />)}\n        </div>\n      </main>\n      :\n      <div data-testid='loading'>Loading...</div>\n    );\n  \n};\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAMC,QAAQ,GAACL,WAAW,EAAE;EAC5B,MAAMM,kBAAkB,GAACA,CAACC,CAAC,EAACC,CAAC,KAAG;IAC9B,IAAGD,CAAC,CAACE,KAAK,GAACD,CAAC,CAACC,KAAK,EAAC;MACjB,OAAO,CAAC;IACV,CAAC,MACI,IAAGF,CAAC,CAACE,KAAK,GAACD,CAAC,CAACC,KAAK,EAAC;MACtB,OAAO,CAAC,CAAC;IACX,CAAC,MACG;MACF,OAAOF,CAAC,CAACG,EAAE,GAACF,CAAC,CAACE,EAAE;IAClB;EACF,CAAC;EACD,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAChB,KAAK,CAACiB,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAACnB,KAAK,CAACiB,QAAQ,EAAE;EAE/CjB,KAAK,CAACoB,SAAS,CAAC,MAAI;IAElBlB,WAAW,CAACC,aAAa,EAAC,CAAC,CAAC,EAACM,QAAQ,CAAC,CACrCY,IAAI,CAAEC,IAAI,IAAG;MACZ,MAAMC,UAAU,GAACD,IAAI,CAACE,IAAI,CAACd,kBAAkB,CAAC;MAC9CS,YAAY,CAACI,UAAU,CAAC;IAC1B,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,IAAG;MACZV,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAIH,OACET,SAAS,gBACTZ,OAAA;IAAAsB,QAAA,eACEtB,OAAA;MAAKuB,SAAS,EAAC,OAAO;MAAAD,QAAA,EAEnBV,SAAS,CAACY,GAAG,CAAEC,QAAQ,iBAAGzB,OAAA,CAACL,IAAI;QAAoBa,EAAE,EAAEiB,QAAQ,CAACjB,EAAG;QAACD,KAAK,EAAEkB,QAAQ,CAAClB,KAAM;QAACmB,KAAK,EAAED,QAAQ,CAACC,KAAM;QAACC,YAAY,EAAEF,QAAQ,CAACE,YAAa;QAACC,WAAW,EAAEH,QAAQ,CAACG,WAAY;QAACC,KAAK,EAAEJ,QAAQ,CAACI,KAAM;QAACC,IAAI,EAAG,IAAIC,IAAI,CAACN,QAAQ,CAACK,IAAI,CAAC,CAAEE,kBAAkB,EAAG;QAACC,KAAK,EAAER,QAAQ,CAACQ;MAAM,GAAxPC,IAAI,CAACC,MAAM,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAA8O;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC9R;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD,gBAEPvC,OAAA;IAAK,eAAY,SAAS;IAAAsB,QAAA,EAAC;EAAU;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAGjD,CAAC;AAACrC,EAAA,CA3CID,IAAI;EAAA,QAEOH,WAAW;AAAA;AAAA0C,EAAA,GAFtBvC,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}